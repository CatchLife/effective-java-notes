(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{167:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_6-消除过期的对象引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-消除过期的对象引用","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.消除过期的对象引用")]),t._v(" "),a("p",[t._v("Java 具有自己的垃圾回收器，这很容易跟你留下这样的印象：认为自己不再需要考虑内存管理的事情了。其实不然。")]),t._v(" "),a("p",[t._v("考虑下面这个简单的栈实现的例子：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v('// Can you spot the "memory leak"?')]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v("  "),a("span",{attrs:{class:"token class-name"}},[t._v("Stack")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v("  Object"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  elements"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("  size  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("final")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("  DEFAULT_INITIAL_CAPACITY  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("16")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v("  "),a("span",{attrs:{class:"token function"}},[t._v("Stack")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    elements  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),a("span",{attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DEFAULT_INITIAL_CAPACITY"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{attrs:{class:"token function"}},[t._v("push")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object  e"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("ensureCapacity")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    elements"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  e"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v("  Object  "),a("span",{attrs:{class:"token function"}},[t._v("pop")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size  "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),a("span",{attrs:{class:"token class-name"}},[t._v("EmptyStackException")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v("  elements"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("size"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/**\n   * Ensure space for at least one more element, roughly\n   * doubling the capacity each time the array needs to grow.\n   */")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{attrs:{class:"token function"}},[t._v("ensureCapacity")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length  "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("  size"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      elements  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  Arrays"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("copayOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elements"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("2")]),t._v("  "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("  size  "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这段程序中并没有很明显的错误。无论如何测试，它都会成功地通过每一项测试，但是这个程序中隐藏着一个问题。不严格地讲，这段程序有一个“内存泄露”，随着垃圾回收器活动的增加，或者由于内存占用的不断增加，程序性能的降低会逐渐表现出来。在极端的情况下，这种内存泄露会导致磁盘交换（Disk Paging），甚至导致程序失败（ "),a("code",[t._v("OutOfMemoryError")]),t._v(" 错误），但是这种失败情形相对比较少见。")]),t._v(" "),a("p",[t._v("那么，程序中哪里发生了内存泄露呢？如果一个栈先是增长，然后再收缩，那么，从栈中弹出来的对象将不会被当做垃圾回收，即使使用栈的程序不再引用这些对象，它们也不会被回收。这是因为，栈内部维护着对这些对象的 "),a("em",[t._v("过期引用")]),t._v(" （obsolete reference）。所谓的过期引用，是指永远也不会再被解除的引用。在本例中，凡是在 "),a("code",[t._v("elements")]),t._v(" 数组的“活动部分”（active portion）之外的任何引用都是过期的。活动部分是指 "),a("code",[t._v("elements")]),t._v(" 中下标小于 "),a("code",[t._v("size")]),t._v(" 的那些元素。")]),t._v(" "),a("p",[t._v("在支持垃圾回收的语言中，内存泄露是很隐蔽的（称这类内存泄露为“ "),a("em",[t._v("无意识的对象保持")]),t._v(" （unintentional object retention）”更为恰当）。如果一个对象引用被无意识地保留起来了，那么，垃圾回收机制不仅不会处理这个对象，而且也不会处理被这个对象所引用的所有其他对象。即使只有少量的几个对象引用被无意识地保留下来，也会有许许多多的对象被排除在垃圾回收机制之外，从而对性能造成潜在的重大影响。")]),t._v(" "),a("p",[t._v("这类问题的修复方法很简单：一旦对象引用已经过期，只需清空这些引用即可。对于上述例子中的 "),a("code",[t._v("Stack")]),t._v(" 类而言，只要一个单元被弹出栈，指向它的引用就过期了。 "),a("code",[t._v("pop")]),t._v(" 方法的修订版本如下所示：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v("  Object  "),a("span",{attrs:{class:"token function"}},[t._v("pop")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v("  "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size  "),a("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v("  "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("throw")]),t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  "),a("span",{attrs:{class:"token class-name"}},[t._v("EmptyStackException")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  Object  result  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  elements"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("size"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  elements"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("size"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("  null"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// Eliminate obsolete reference （清空过期引用）")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v("  result"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当程序员第一次被类似这样的问题困扰的时候，他们往往会过分小心：对于每一个对象引用，一旦程序不再用到它，就把它清空。其实这样做既没必要，也不是我们所期望的，因为这样做会把程序代码弄得很乱。"),a("strong",[t._v("清空对象引用应该是一种例外，而不是一种规范行为。")]),t._v(" 消除过期引用最好的方法是让包含该引用的变量结束其生命周期。如果你是在最紧凑的作用域范围内定义每一个变量，这种情形就会自然而然地发生。")]),t._v(" "),a("p",[t._v("那么，何时应该清空引用呢？ "),a("code",[t._v("Stack")]),t._v(" 类的哪方面特性使它易于遭受内存泄露的影响呢？简而言之，问题在于， "),a("code",[t._v("Stack")]),t._v(" 类"),a("strong",[t._v("自己管理内存")]),t._v("（manage its own memory）。 "),a("em",[t._v("存储池")]),t._v(" （storage pool）包含了 "),a("code",[t._v("elements")]),t._v(" 数组（对象引用单元，而不是对象本身）的元素。数组活动区域（同前面的定义）中的元素是 "),a("em",[t._v("已分配的")]),t._v(" （allocated），而数组其余部分的元素则是 "),a("strong",[t._v("自由的")]),t._v(" （free）。但是垃圾回收器并不知道这一点；对于垃圾回收器而言， "),a("code",[t._v("elements")]),t._v(" 数组中的所有对象引用都同等有效。只有程序员知道数组的非活动部分是不重要的。程序员可以把这个情况告知垃圾回收器，做法很简单：一旦数组元素变成了非活动部分的一部分，程序员就手工清空这些数组元素。")]),t._v(" "),a("p",[t._v("一般而言， "),a("strong",[t._v("只要类是自己管理内存，程序员就应该警惕内存泄露问题")]),t._v(" 。一旦元素被释放掉，则该元素中包含的任何对象引用都应该被清空。")]),t._v(" "),a("p",[a("strong",[t._v("内存泄露的另一个常见来源是缓存")]),t._v(" 。一旦你把对象引用放到缓存中，它就很容易被遗忘掉，从而使得它不再有用之后很长一段时间内仍然留在缓存中。对于这个问题，有几种可能的解决方案。如果你正好要实现这样的缓存：只要在缓存之外存在对某个项的键的引用，该项就有意义，那么就可以用 "),a("code",[t._v("WeakHashMap")]),t._v(" 代表缓存；当缓存中的项过期后，它们就会自动被删除。记住只有当所要的缓存项的生命周期是由该键的外部引用而不是由值决定时，"),a("code",[t._v("WeakHashMap")]),t._v(" 才有用处。")]),t._v(" "),a("p",[t._v("下面是一个介绍"),a("code",[t._v("WeakHashMap")]),t._v("的例子")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("main")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    String a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"a"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    String b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"b"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Map weakmap "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("WeakHashMap")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Map map "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("put")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"aaa"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("put")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"bbb"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    weakmap"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("put")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"aaa"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    weakmap"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("put")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"bbb"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("remove")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("gc")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Iterator i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("entrySet")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("iterator")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry en "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"map:"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" en"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" en"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getValue")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    Iterator j "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" weakmap"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("entrySet")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("iterator")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry en "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Map"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" j"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      System"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"weakmap:"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" en"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getKey")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" en"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getValue")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此例子中声明了两个 Map 对象，一个是 HashMap，一个是 WeakHashMap，同时向两个 map 中放入 a、b 两个对象，当 HashMap remove 掉 a 并且将 a、b 都指向 null 时，WeakHashMap 中的 a 将自动被回收掉。出现这个状况的原因是，对于 a 对象而言，当 HashMap remove 掉并且将 a 指向 null 后，除了 WeakHashMap 中还保存 a 外已经没有指向 a 的指针了，所以 WeakHashMap 会自动舍弃掉 a，而对于 b 对象虽然指向了 null，但 HashMap 中还有指向 b 的指针，所以 WeakHashMap 将会保留。")]),t._v(" "),a("p",[a("strong",[t._v("内存泄露的第三个常见来源是监听器和其他回调。")]),t._v(" 如果你实现了一个 API，客户端在这个 API 中注册回调，却没有显式地取消注册，那么除非你采取某些动作，否则它们就会积聚。确保回调立即被当做垃圾回收的最佳方法是只保存它们的"),a("em",[t._v("弱引用")]),t._v("（weak reference），例如，只将它们保存成 "),a("code",[t._v("WeakHashMap")]),t._v(" 中的键。")]),t._v(" "),a("p",[t._v("由于内存泄露通常不会表现成明显的失败，所以它们可以在一个系统中存在很多年。往往只有通过仔细检查代码，或者借助于 Heap 剖析工具（Heap Profiler）才能发现内存泄漏问题。因此，如果能够在内存泄漏发生之前就知道如何预测此类问题，并阻止它们发生，那是最好不过的了。")])])}],!1,null,null,null);o.options.__file="6.md";s.default=o.exports}}]);